{"version":3,"file":"index.min.mjs","sources":["../src/main/$/index.js","../src/main/calcSizeWithRespectRatio/index.js","../src/main/camelToHyphen/index.js","../src/main/flatFormRules/index.js","../src/main/flattenArr/index.js","../src/main/getElOffsetToEvent/index.js","../src/main/htmlDecodeByDom/index.js","../src/main/htmlEncodeByDom/index.js","../src/main/hyphenToCamel/index.js","../src/main/isElement/index.js","../src/main/isEscape/index.js","../src/main/isLandscape/index.js","../src/main/isObject/index.js","../src/main/serializeObj/index.js","../src/main/toFixedNoLast0/index.js","../src/main/tryJsonParse/index.js","../src/index.js"],"sourcesContent":["/**\n * @description imitate DOM selector`$` in jQuery\n * @param {String} selector\n * @param {Node} [parentNode=document]\n * @returns {Array} array with target nodes\n */\nexport default function $(selector, parentNode = document) {\n  return Array.from(parentNode.querySelectorAll(selector))\n}\n","/**\n * @description calculate the max size child can be without change respect ratio\n * @param {{width:Number,height:Number}} parentRect parent container size\n * @param {{width:Number,height:Number}} childRect child container size\n * @param {string} [mode='contain'] calculate by contain or cover, which is similar to background-size values\n * @returns {{width,height,offsetX,offsetY}} target child size\n * @example\n * calcSizeWithRespectRatio({width:100,height:100},{width:50,height:200}) //{width:25,height:100,offsetX:75,offsetY:0}\n * calcSizeWithRespectRatio({width:100,height:100},{width:50,height:200},'cover') //{width:100,height:400,offsetX:0,offsetY:-300}\n */\nexport default function calcSizeWithRespectRatio(\n  parentRect,\n  childRect,\n  mode = 'contain'\n) {\n  const holderWid = parentRect.width\n  const holderHei = parentRect.height\n  const targetWid = childRect.width\n  const targetHei = childRect.height\n\n  const widthScaleRatio = holderWid / targetWid\n  const heightScaleRatio = holderHei / targetHei\n  const targetRespectRatio = targetWid / targetHei\n\n  const calcOnHeight = {\n    width: holderHei * targetRespectRatio,\n    height: holderHei,\n    offsetX: holderWid - holderHei * targetRespectRatio,\n    offsetY: 0,\n  }\n  const calcOnWidth = {\n    width: holderWid,\n    height: holderWid / targetRespectRatio,\n    offsetX: 0,\n    offsetY: holderHei - holderWid / targetRespectRatio,\n  }\n  switch (mode) {\n    case 'contain':\n      return widthScaleRatio > heightScaleRatio ? calcOnHeight : calcOnWidth\n    case 'cover':\n      return widthScaleRatio > heightScaleRatio ? calcOnWidth : calcOnHeight\n  }\n}\n","/**\n * @description camel to hyphen\n * @param {String} str\n * @returns {String}\n * @example\n * camelToHyphen('camelToHyphen') // \"camel-to-hyphen\"\n */\nexport default function camelToHyphen(str) {\n  return str.replace(/([A-Z])/g, '-$1').toLowerCase()\n}\n","/**\n *\n * @param {{Array}} rules\n * @example\n * // [{\"message\":\"field1 rule1!\"},{\"message\":\"field2 rule1!\"},{\"message\":\"field2 rule2!\"}]\n * flatFormRules({ field1: [  {  message: 'field1 rule1!' } ], field2: [ {  message: 'field2 rule1!' }, {  message: 'field2 rule2!' }]})\n * @example\n * // [{\"message\":\"field1 rule1!\"},{\"message\":\"field2 rule1!\"}]\n * flatFormRules({ field1: [  {  message: 'field1 rule1!' } ], field2: [ {  message: 'field2 rule1!' }]})\n\n */\nexport default function flatFormRules(rules) {\n  return [].concat(...Object.values(rules))\n}\n","/**\n * @description put nested children in one dimension\n * @param {Array} array\n * @param {string} [children='children'] key name of children\n * @returns {Array}\n * @example\n * flattenArr([{value:'1',children:[{value:'1.1',children:[{value:'1.1.1'}]},{value:'1.2',children:[{value:'1.2.1',children:[]}]}]}]) //[{value:'1',...},{value:'1.1',...},{value:'1.1.1',...},{value:'1.2',...},{value:'1.2.1',...}]\n */\nexport default function flattenArr(array, childrenKey = 'children') {\n  function iterator(arr, res) {\n    return arr.reduce((re, obj) => {\n      re.push(obj)\n      const children = obj[childrenKey]\n      if (Array.isArray(children)) {\n        iterator(children, re)\n      }\n      return re\n    }, res || [])\n  }\n  return iterator(array)\n}\n","/**\n * @description get element relative position offset to event\n * @param {Event} event\n * @param {HTMLElement} el\n * @returns {Object} {left:Number,right:Number,top:Number,bottom:Number}\n */\nexport default function getElOffsetToEvent(event, el) {\n  const boundingClientRect = el.getBoundingClientRect()\n  return {\n    left: event.clientX - boundingClientRect.left,\n    top: event.clientY - boundingClientRect.top,\n    right: boundingClientRect.right - event.clientX,\n    bottom: boundingClientRect.bottom - event.clientY,\n  }\n}\n","/**\n * @description decode user input to show original text\n * @param {String} text user input value\n * @returns {String} decoded text\n * @example\n * htmlDecodeByDom('&lt;script&gt;&lt;/script&gt;') //<script></script>\n */\nexport default function htmlDecodeByDom(html) {\n  const div = document.createElement('div')\n  div.innerHTML = html\n  return div.textContent\n}\n","/**\n * @description encode user input to avoid evil script\n * @param {String} text user input value\n * @returns {String} encoded text\n * @example\n * htmlEncodeByDom('<script></script>') //&lt;script&gt;&lt;/script&gt;\n */\nexport default function htmlEncodeByDom(text) {\n  const div = document.createElement('div')\n  div.textContent = text\n  return div.innerHTML\n}\n","/**\n * @description hyphen to camel\n * @param {String} str\n * @returns {String}\n * @example\n * hyphenToCamel('hyphen-to-camel') // \"hyphenToCamel\"\n */\nexport default function hyphenToCamel(str) {\n  return str.replace(/-(\\w)/g, (all, letter) => letter.toUpperCase())\n}\n","/**\n * @description detect if obj is an element or document\n * @param {*} obj\n * @returns {Boolean}\n * @example\n * isElement(document) // true\n * isElement(document.documentElement) // true\n * isElement(document.createElement('svg')) // true\n * isElement(document.createDocumentFragment()) // false\n * isElement([]) // false\n */\nexport default function isElement(obj) {\n  if (typeof obj !== 'object' || obj === null) {\n    return false\n  }\n  let prototypeStr\n  let prototype\n  do {\n    prototype = Object.getPrototypeOf(obj)\n    // to work in iframe\n    prototypeStr = Object.prototype.toString.call(prototype)\n    // '[object Document]' is used to detect document\n    if (\n      prototypeStr === '[object Element]' ||\n      prototypeStr === '[object Document]'\n    ) {\n      return true\n    }\n    obj = prototype\n    // null is the terminal of object\n  } while (prototype !== null)\n  return false\n}\n","/**\n * @description detect if user presses Escape key, just demonstrate how to handle keyCode compatibility\n * @param {Event} event\n * @returns {Boolean}\n */\nexport default function isEscape(event) {\n  // https://caniuse.com/#search=code IE/Edge 18 doesn't support event.code\n  return (\n    event.code === 'Escape' || event.keyCode === 27 || event.key === 'Escape'\n  )\n}\n","/**\n * @description detect whether the screen orientation is landscape\n * @returns {Boolean}\n */\nexport default function isLandscape() {\n  const screenOrientation = (\n    window.screen.orientation ||\n    window.screen.msOrientation /* win8 IE11 */ ||\n    window.screen.mozOrientation ||\n    {}\n  ).type\n  if (typeof screenOrientation === 'string') {\n    return !!screenOrientation.toLowerCase().match(/landscape/)\n  }\n  if ('orientation' in window && typeof window.orientation === 'number') {\n    /* @deprecated */\n    return Math.abs(window.orientation) === 90\n  }\n  /* impotent api */\n  return window.innerWidth > window.innerHeight\n}\n","/**\n * @description detect if it is a generalized object\n * @param {*} obj\n * @returns {Boolean}\n * @example\n * isObject(new RegExp()) //true\n * isObject('') //false\n */\nexport default function isObject(obj) {\n  const type = typeof obj\n  return obj !== null && (type === 'object' || type === 'function')\n}\n","/**\n * @author luxiansheng\n * @param { Object } obj\n * @param { Function } [transformer]\n * @returns { String } serialized string\n * @example\n * // returns x=1&y=2\n * serializeObj({x:1,y:2})\n * @example\n * // returns x=1\n * serializeObj({x:1,y:undefined})\n * @example\n * // returns x=1\n * serializeObj({x:1,y:null})\n * @example\n * // returns x=1\n * serializeObj({x:1,y:''})\n * @example\n * // returns x=1&y=15030230023\n * serializeObj({ x: 1, y: new Date() }, (key, value) => value instanceof Date ? key+'='+value.getTime() : key+'='+value)\n */\n\nexport default function serializeObj(obj, transformer) {\n  let reducer = (re, [key, value]) => {\n    if (typeof value === 'undefined' || value === null || re + value === re) {\n      return re\n    }\n    re += `${key}=${value}&`\n    return re\n  }\n  if (typeof transformer === 'function') {\n    reducer = (re, [key, value]) => {\n      const result = transformer(key, value)\n      if (result === false) {\n        return re\n      }\n      re += `${result}&`\n      return re\n    }\n  }\n  return Object.entries(obj).reduce(reducer, '').replace(/&$/, '')\n}\n","/**\n * @description delete the last `0` when a number calls toFixed\n * @param {Number} num\n * @param {Number} precise\n * @returns {String}\n * @example\n * toFixedNoLast0(12.230, 4) //\"12.23\"\n */\nexport default function toFixedNoLast0(number, precise) {\n  return number.toFixed(precise).replace(/\\.?0+$/, '')\n}\n","/**\n * @description add error handler when using JSON.parse()\n * @param {*} jsonText\n * @param {string} [errorPropertyName='error']\n * @param {*} [valueForNull={ [errorPropertyName]: null }]\n * @returns {Object} new Object, with the original text saved in errorPropertyName\n * @example\n * tryJsonParse('str') //{error:'str'}\n * tryJsonParse(null,null) //{'null':null}\n * tryJsonParse(null,null,null) //null\n * tryJsonParse('{\"name\":\"test\",\"value\":1}') //{name: \"test\", value: 1}\n */\nexport default function tryJsonParse(\n  jsonText,\n  errorPropertyName = 'error',\n  valueForNull = { [errorPropertyName]: null }\n) {\n  try {\n    return JSON.parse(jsonText) || valueForNull\n  } catch (e) {\n    return { [errorPropertyName]: jsonText }\n  }\n}\n","import $ from './main/$'\nimport calcSizeWithRespectRatio from './main/calcSizeWithRespectRatio'\nimport camelToHyphen from './main/camelToHyphen'\nimport flatFormRules from './main/flatFormRules'\nimport flattenArr from './main/flattenArr'\nimport getElOffsetToEvent from './main/getElOffsetToEvent'\nimport htmlDecodeByDom from './main/htmlDecodeByDom'\nimport htmlEncodeByDom from './main/htmlEncodeByDom'\nimport hyphenToCamel from './main/hyphenToCamel'\nimport isElement from './main/isElement'\nimport isEscape from './main/isEscape'\nimport isLandscape from './main/isLandscape'\nimport isObject from './main/isObject'\nimport serializeObj from './main/serializeObj'\nimport toFixedNoLast0 from './main/toFixedNoLast0'\nimport tryJsonParse from './main/tryJsonParse'\n\nexport {\n  $,\n  calcSizeWithRespectRatio,\n  camelToHyphen,\n  flatFormRules,\n  flattenArr,\n  getElOffsetToEvent,\n  htmlDecodeByDom,\n  htmlEncodeByDom,\n  hyphenToCamel,\n  isElement,\n  isEscape,\n  isLandscape,\n  isObject,\n  serializeObj,\n  toFixedNoLast0,\n  tryJsonParse,\n}\nexport default {\n  $,\n  calcSizeWithRespectRatio,\n  camelToHyphen,\n  flatFormRules,\n  flattenArr,\n  getElOffsetToEvent,\n  htmlDecodeByDom,\n  htmlEncodeByDom,\n  hyphenToCamel,\n  isElement,\n  isEscape,\n  isLandscape,\n  isObject,\n  serializeObj,\n  toFixedNoLast0,\n  tryJsonParse,\n}\n"],"names":["$","selector","parentNode","document","Array","from","querySelectorAll","calcSizeWithRespectRatio","parentRect","childRect","mode","holderWid","width","holderHei","height","targetWid","targetHei","widthScaleRatio","heightScaleRatio","targetRespectRatio","calcOnHeight","offsetX","offsetY","calcOnWidth","camelToHyphen","str","replace","toLowerCase","flatFormRules","rules","concat","Object","values","flattenArr","array","childrenKey","iterator","arr","res","reduce","re","obj","push","children","isArray","getElOffsetToEvent","event","el","boundingClientRect","getBoundingClientRect","left","clientX","top","clientY","right","bottom","htmlDecodeByDom","html","div","createElement","innerHTML","textContent","htmlEncodeByDom","text","hyphenToCamel","all","letter","toUpperCase","isElement","prototypeStr","prototype","getPrototypeOf","toString","call","isEscape","code","keyCode","key","isLandscape","screenOrientation","window","screen","orientation","msOrientation","mozOrientation","type","match","Math","abs","innerWidth","innerHeight","isObject","serializeObj","transformer","reducer","value","result","entries","toFixedNoLast0","number","precise","toFixed","tryJsonParse","jsonText","errorPropertyName","valueForNull","JSON","parse","e"],"mappings":"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"}